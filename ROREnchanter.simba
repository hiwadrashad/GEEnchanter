program ROREnchanter;

//{$DEFINE WALKER}
{$i AeroLib/AeroLib.Simba}
{$I OSRWalker/Walker.simba}

var
x, y : Integer;
RSW: TRSWalker;
path, TPA: TPointArray;
DTM_RingOfRecoil, DTM_SaphireRing, DTM_CosmicRune,DTM_BankFirstTab, DTM_MagicLevelUp, DTM_ActiveMageTab, DTM_ActiveInvTab, DTM_SaphireRingBank, DTM_RingOfRecoilBank: Integer;
ATPA: T2DPointArray;
tCol : TColEx;
NeedMoreItems : Boolean;

const

P_USERNAME := 'hiwadrashad1@gmail.com';
P_PASSWORD := 'Groothoofd3';
P_PIN := '';
USEBREAKS := true;
breakAfterHours_MIN := 2;
breakAfterHours_MAX := 3;  {breaks after random (MIN, MAX) hours}
breakForMinutes_MIN := 15;
breakForMinutes_MAX := 30; {for random (MIN, MAX) minutes}

procedure free;
begin
freeDTM(DTM_RingOfRecoil);
freeDTM(DTM_SaphireRing);
freeDTM(DTM_CosmicRune);
freeDTM(DTM_BankFirstTab);
freeDTM(DTM_MagicLevelUp);
freeDTM(DTM_ActiveMageTab);
freeDTM(DTM_ActiveInvTab);
freeDTM(DTM_SaphireRingBank);
freeDTM(DTM_RingOfRecoilBank);
end;


procedure customMouse(point: TPoint);
begin
  case random(0, 6) of
    0..2: BrakeMMouse(point, random(5), random(5), true);
    3: BrakeMMouse(point, random(5), random(5), false);
    4..5: MissMouse(point, random(5), random(5));
    6: HumanMMouse(point, random(5), random(5));
  end;
end;


procedure setup();
begin
mouseSpeed := Random(18,25);
writeln('mouseSpeed set at: ' + intToStr(mouseSpeed));
tCol.create(1647407, 50, 0.01, 0.01);
DTM_RingOfRecoil := DTMFromString('mQwAAAHicY2ZgYMhhYmDIA+IiIGZnZGAQBGJGIL66W4phfrcgA69gBQMeAADPkQTt');
DTM_SaphireRing  := DTMFromString('mQwAAAHicY2ZgYDjAxMCwF4iPArE2IwODKhAbA/Hz07IMgqITGW7slWLAAwAwogcH');
DTM_CosmicRune := DTMFromString('mWAAAAHicY2FgYHBiYmDwAmI7IHYB4qdAscdA/AaKH9yTYpg9YQJDaW4OmE0MAABoEQt0');
DTM_BankFirstTab := DTMFromString('mggAAAHicY2NgYAgA4kAg9gNidyCOhdK2QGwIxK5AbAPE9kBsAMTZcd4MrrZGYKynrQJnkwcAgqMHoA==');
DTM_MagicLevelUp := DTMFromString('mbQAAAHicY2VgYHAGYkcgDgXiCCDWAOKljAwMPUDcBcSbgHgHEAsmTGTgDWth2L26G4zXLWhmIAkAABdxDCU=');
DTM_ActiveMageTab := DTMFromString('mbQAAAHicY2VgYHjKxMBwG4hfA/F9IH4LxDuB4uuB+DAQHwLiDUDcnhfKUKkhz2AjKsDgKCbI4C0pwkASAACO7gtv');
DTM_ActiveInvTab := DTMFromString('mbQAAAHicY2VgYGhlYmDoBuIqIG4E4nog3gEUXwvEq4H4KBDvAWJ3dX4GFwkhhmwVaTDbXIGDgSQAAJm4CJw=');
DTM_SaphireRingBank := DTMFromString('mWAAAAHicY2FgYGiF4j4g7gfiWCBOA+JUKFtCdi/Doj5BhrNbJBg8HUwYiAEA1OwIOg==');
DTM_RingOfRecoilBank := DTMFromString('mWAAAAHicY2FgYNgHxLuBeDMQHwHiKCDOBOJUIE4DYl7BCoalE0QZNs4WZfB0MGEgBgAA+lsIgQ==');
end;



Procedure declarePlayer();
begin
Me.Name := P_USERNAME;
Me.Pass := P_PASSWORD;
Me.Pin := P_PIN;
Me.Active := True;
Me.Member :=  True;
end;

procedure setupPlayer();
begin
  writeln('player setup...');
  if (not isLoggedIn()) then
    loginPlayer(false);
  if (isLoggedIn()) then
  begin
    setAngle(ANGLE_HIGH);
  end;
end;

procedure antiban();
begin
    case random(0, 60) of
    0..35:
        if (pointInBox(getMousePnt(), intToBox(1, 1, 765, 500))) then
          MMouseOffClient('random');
    41..45:
    begin
    hoverSkill(SKILL_MAGIC, false);
    sleep(random(1000,2000));
    customMouse(point(646,181));
    sleep(random(100,300));
    fastClick(MOUSE_RIGHT);
    sleep(random(300,600))
    end
    46..50: pickUpMouse;
    50..60: compassMovement(-100, 170, false);
    end;
end;


procedure WithdrawBank();
var
InvCoord : Integer;
Deposited : Boolean;
begin
 if (findDTM(DTM_BankFirstTab, x, y, MSX1, MSY1, MSX2, MSY2)) then
 begin
 customMouse(point(122,57));
 sleep(random(100,300));
 fastClick(MOUSE_LEFT);
 sleep(random(300,600));
 end
if (findDTM(DTM_RingOfRecoil, x, y, MIX1,MIY1,MIX2,MIY2)) then
begin
repeat
begin
InvCoord := random(2,28);
if (FindDTM(DTM_RingOfRecoil, x, y, invBox(InvCoord).x1, invBox(InvCoord).y1, invBox(InvCoord).x2, invBox(InvCoord).y2)) then
begin
sleep(random(300,600));
customMouse(point(x,y));
sleep(random(100,300));
fastClick(MOUSE_RIGHT);
waitOption('Deposit-All',300);
Deposited := True;
end
end
until (Deposited = True)
end
Deposited := False;
if (findDTM(DTM_SaphireRingBank, x, y, MSX1, MSY1, MSX2, MSY2)) then
 begin
 customMouse(point(x,y));
 sleep(random(150,300));
 fastCLick(MOUSE_RIGHT);
 if (random(0,1) = 0) then
   begin
   waitOption('Withdraw-All', 300)
   end
  else
   begin
   waitOption('Withdraw-All-but-1', 300)
   end
   CustomMouse(point(487,22));
   sleep(random(100,300));
   fastClick(MOUSE_LEFT);
   sleep(random(300,600));
 end
 else
 begin
 NeedMoreItems := True;
 end
end;

procedure openBank();
var
  TPA: TPointArray;
  ATPA: T2DPointArray;
  I, X: Integer;
  spot, firstInv: TPoint;
  t: Timer;
  limitHit: Boolean;
begin
  if (Interfaces[PINSCREEN].isVisible()) then
    inPin(P_PIN);
  if (isBankOpen()) then
    exit;
 // tCol.create(2042682, 40, 0.01, 0.01);// duel arena
 // tCol.create(605521, 10, 0.01, 0.01);//  edgeville
  // al kharid pass

  if (tCol.findAllIn(AREA_MS,TPA)) then
  repeat
  begin
  X := X + 1;
  sleep(random(300,600));
  I := (random(0,length(TPA)));
  customMouse(point(TPA[I].X,TPA[I].Y));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  if (findDTM(DTM_BankFirstTab, x, y, MSX1, MSY1, MSX2, MSY2)) then
  begin
  sleep(random(1000,2000));
  end
  else
  begin
  sleep(random(300,600));
  end
  end
  if (X = 10) then
  begin
  limitHit := True;
  end
  until (isBankOpen() or limitHit);
  X := 0;
  limitHit := false;
end;

procedure EnchantSubRoutine();
var
I : integer;
InvIndex: Integer;
begin
if (random(0,1) = 0) then
begin
InvIndex := (random(2,28));
if (FindDTM(DTM_SaphireRing, x, y, invBox(InvIndex).x1, invBox(InvIndex).y1, invBox(InvIndex).x2, invBox(InvIndex).y2)) then
begin
 customMouse(point(741,182));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(693,216));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(x, y));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(643,185));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(100,300));

  MMouseOffClient('random');
end
else
begin
EnchantSubRoutine();
end
end
else
begin
for I := 1 to 28 do
 begin
  if (FindDTM(DTM_SaphireRing, x, y, invBox(I).x1, invBox(I).y1, invBox(I).x2, invBox(I).y2)) then
  begin
 customMouse(point(741,182));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(693,216));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(x, y));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(300,600));
  customMouse(point(643,185));
  sleep(random(100,300));
  fastClick(MOUSE_LEFT);
  sleep(random(100,300));
  break;
  end
 end
end
end;


procedure EnchantMainRoutine();
begin
if(findDTM(DTM_SaphireRing, x, y, MIX1,MIY1,MIX2,MIY2)) then
 begin
 EnchantSubRoutine();
 repeat
 begin
 if(findDTM(DTM_MagicLevelUp, x, y, MCX1,MCY1,MCX2,MCY2)) then
  begin
   EnchantSubRoutine();
  end
 end
 until (not (findDTM(DTM_SaphireRing, x, y, MIX1,MIY1,MIX2,MIY2)) and  ((findDTM(DTM_ActiveInvTab, x, y, 517,163,673,207))))
 end
 else
 begin
 if(not(findDTM(DTM_ActiveInvTab, x, y, 517,163,673,207))) then
 begin
 customMouse(point(644,185));
 sleep(random(100,300));
 fastClick(MOUSE_LEFT);
 sleep(random(300,600));
 EnchantSubRoutine();
 end
 end
end;

function getState(): Integer;
begin
if ((random(0, 1) = 0) and (not (isBankOpen()))) then
begin
exit(3);
end
if((findDTM(DTM_SaphireRing, x, y, MIX1,MIY1,MIX2,MIY2)) and (findDTM(DTM_CosmicRune, x, y, MIX1,MIY1,MIX2,MIY2))) and(not (isBankOpen())) then
begin
exit(0);
end
if ((not findDTM(DTM_SaphireRing, x, y, MIX1,MIY1,MIX2,MIY2)) and (findDTM(DTM_CosmicRune, x, y, MIX1,MIY1,MIX2,MIY2)) and (not (isBankOpen()))) then
begin
exit(1);
end
if ((isBankOpen()) and (findDTM(DTM_CosmicRune, x, y, MIX1,MIY1,MIX2,MIY2)) and (NeedMoreItems = False)) then
begin
exit(2);
end
end;

procedure executeState(State: Integer);
begin
case (State) of
 0: EnchantMainRoutine;
 1: openBank;
 2: WithdrawBank;
 3: antiban;
 end
 sleep(random(100,150));
end;

begin
   initAL();
   setup();
   declarePlayer();
   setupPlayer();

   //repeat
   // executeState(getState());
   // until (false);

   free();

  // RSW.Init('world.png');
  // path := [point(2685,1494)];
  // RSW.WalkPath(path);
end.
